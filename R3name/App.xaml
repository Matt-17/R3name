<Application x:Class="R3name.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:R3name.Controls"
             Startup="Application_Startup" Exit="Application_Exit">
    <Application.Resources>
        <Style x:Key="Header" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="2,4,2,1" />
        </Style>

        <Style x:Key="CheckBoxHeader" TargetType="CheckBox">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="0,4,0,1" />
        </Style>

        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                    x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding Border.CornerRadius}">
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="ComboBox">
            <Style.Setters>
                <Setter Property="Height" Value="24"/>
                <!--<Setter Property="Width" Value="175"/>-->
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Foreground" Value="#1a1a1a" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="#b3b3b3"/>
                <Setter Property="BorderThickness" Value="1px"/>
                <Setter Property="Margin" Value="2" />
                <Setter Property="Border.CornerRadius" Value="3"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#eaf7ff"/>
                    <Setter Property="BorderBrush" Value="#13a3f7"/>

                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#13a3f7"/>

                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#484848"/>
                    <Setter Property="Background" Value="#AAAAAA"/>
                    <Setter Property="BorderBrush" Value="#b3b3b3"/>
                </Trigger>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Setter Property="Foreground" Value="#1a1a1a"/>
                    <Setter Property="BorderBrush" Value="#b3b3b3"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBox">
            <Style.Setters>
                <Setter Property="Height" Value="24"/>
                <!--<Setter Property="Width" Value="175"/>-->
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Foreground" Value="#1a1a1a" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="#b3b3b3"/>
                <Setter Property="BorderThickness" Value="1px"/>
                <Setter Property="Padding" Value="3,0" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Border.CornerRadius" Value="3"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template" Value="{StaticResource TextBoxBaseControlTemplate}"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#eaf7ff"/>
                    <Setter Property="BorderBrush" Value="#13a3f7"/>

                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#13a3f7"/>

                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#484848"/>
                    <Setter Property="Background" Value="#AAAAAA"/>
                    <Setter Property="BorderBrush" Value="#b3b3b3"/>
                </Trigger>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Cursor" Value="Arrow"/>
                    <Setter Property="Foreground" Value="#1a1a1a"/>
                    <Setter Property="BorderBrush" Value="#b3b3b3"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <Style TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="#FF1B1B1B"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent" >
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="17" Height="17" CornerRadius="2" Background="Transparent" BorderThickness="2" BorderBrush="white" Padding="0">
                                    <Path Width="9" Height="9" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="#28FF78" StrokeThickness="2" Data="M 0 4 L 3 9 9 0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 8 L 8 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#22131313" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="CheckMark" Property="Stroke" Value="#FF6C6C6C"/>

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuItemContainerStyle">
            <Setter Property="MenuItem.Header" Value="{Binding Title}" />
            <Setter Property="MenuItem.Command" Value="{Binding Command}" />
        </Style>

        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="Border.CornerRadius" Value="4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <controls:ClippedBorder Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding Border.CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="PART_INNER_BORDER" Background="Transparent" Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </controls:ClippedBorder>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#33000000" TargetName="PART_INNER_BORDER"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#66000000" TargetName="PART_INNER_BORDER"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ActionButtonTopStyle" TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
            <Setter Property="Border.CornerRadius" Value="0,0,4,4" />
        </Style>

        <Style x:Key="ActionButtonLeftStyle" TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
            <Setter Property="Border.CornerRadius" Value="4,0,0,4" />
        </Style>

        <Style x:Key="ActionButtonRightStyle" TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
            <Setter Property="Border.CornerRadius" Value="0,4,4,0" />
        </Style>

        <Style x:Key="HeaderButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#33000000"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#66000000"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>